// <auto-generated />
using System;
using MakeBitByte.IDP.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MakeBitByte.IDP.Migrations
{
    [DbContext(typeof(UserDbContext))]
    partial class UserDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MakeBitByte.IDP.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecurityCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("SecurityCodeExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Subject")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a271cb6d-19de-4786-a508-e1a15f0d3f97"),
                            Active = true,
                            ConcurrencyStamp = "d57a4887-a497-4832-ac23-fc20d3da98d0",
                            Email = "vinita@anemail.com",
                            Password = "AQAAAAEAACcQAAAAEAz2SA93l305Govh36XNZX7QLHAYUfL1bGTgO+2sSwOgKwSkcQiUD9ir4fG8U4E1GA==",
                            SecurityCodeExpiration = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Subject = "36c434ff-888f-4820-a316-1a025f8a4f0c",
                            UserName = "Vinita"
                        },
                        new
                        {
                            Id = new Guid("4b358d3f-d55e-4771-8e5b-5aeb62cb3e57"),
                            Active = true,
                            ConcurrencyStamp = "9e373e3b-2643-40d2-a9c5-6383c14a3251",
                            Email = "app@anemail.com",
                            Password = "AQAAAAEAACcQAAAAEAz2SA93l305Govh36XNZX7QLHAYUfL1bGTgO+2sSwOgKwSkcQiUD9ir4fG8U4E1GA==",
                            SecurityCodeExpiration = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Subject = "da0d5f9a-8217-4a68-8398-db8506fdf618",
                            UserName = "Appa"
                        },
                        new
                        {
                            Id = new Guid("65ceedf4-43c8-4818-80d8-9ce2bb96c231"),
                            Active = true,
                            ConcurrencyStamp = "42d05044-8a36-40bd-b071-0e63ca762b32",
                            Email = "arjun@anemail.com",
                            Password = "AQAAAAEAACcQAAAAEAz2SA93l305Govh36XNZX7QLHAYUfL1bGTgO+2sSwOgKwSkcQiUD9ir4fG8U4E1GA==",
                            SecurityCodeExpiration = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Subject = "1c94f897-2af3-46d4-a131-8a147d18a2f2",
                            UserName = "Arjun"
                        });
                });

            modelBuilder.Entity("MakeBitByte.IDP.Entities.UserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ff977f00-7b8d-4460-987c-bf5901fc2c9c"),
                            ConcurrencyStamp = "a68e5437-b932-44a2-a7b0-85f59f3a66c6",
                            Type = "given_name",
                            UserId = new Guid("a271cb6d-19de-4786-a508-e1a15f0d3f97"),
                            Value = "Vinita"
                        },
                        new
                        {
                            Id = new Guid("214e0e21-a39e-4d83-9b33-ecdbd5eae4e8"),
                            ConcurrencyStamp = "4ce2b544-520c-4a25-a263-453838260970",
                            Type = "family_name",
                            UserId = new Guid("a271cb6d-19de-4786-a508-e1a15f0d3f97"),
                            Value = "Agarwal"
                        },
                        new
                        {
                            Id = new Guid("a3f8a5fc-841c-47b1-8f1c-dd366f67b359"),
                            ConcurrencyStamp = "e2a24490-3c62-4d18-b4fe-369c9552b85a",
                            Type = "subscriberSince",
                            UserId = new Guid("a271cb6d-19de-4786-a508-e1a15f0d3f97"),
                            Value = "\"2021-06-21T00:00:00\""
                        },
                        new
                        {
                            Id = new Guid("3651fd20-11cf-4417-b0ad-423d43e7b18f"),
                            ConcurrencyStamp = "734aa10b-3770-407b-927b-b4858d83ce44",
                            Type = "role",
                            UserId = new Guid("a271cb6d-19de-4786-a508-e1a15f0d3f97"),
                            Value = "pro"
                        },
                        new
                        {
                            Id = new Guid("6e6cdb7a-4aaa-438a-9618-bbd1e6d6113e"),
                            ConcurrencyStamp = "7497af29-05df-40e3-a1bc-574f5dd80d20",
                            Type = "given_name",
                            UserId = new Guid("4b358d3f-d55e-4771-8e5b-5aeb62cb3e57"),
                            Value = "Appa"
                        },
                        new
                        {
                            Id = new Guid("b649b2d1-3e21-45b1-9615-dcc0e28f8993"),
                            ConcurrencyStamp = "96330052-b8b9-4291-8c92-a4667460b4b8",
                            Type = "family_name",
                            UserId = new Guid("4b358d3f-d55e-4771-8e5b-5aeb62cb3e57"),
                            Value = "Agarwal"
                        },
                        new
                        {
                            Id = new Guid("0c6c1dc7-1ea3-45ee-97e3-b88febb1809a"),
                            ConcurrencyStamp = "5432b911-4f2c-4e8b-a938-30d520c682aa",
                            Type = "subscriberSince",
                            UserId = new Guid("4b358d3f-d55e-4771-8e5b-5aeb62cb3e57"),
                            Value = "\"2023-01-21T00:00:00\""
                        },
                        new
                        {
                            Id = new Guid("b180d46d-3fbc-4601-86fc-e069dea1038d"),
                            ConcurrencyStamp = "e1281bff-a682-4ad7-9772-4a0f0e42584d",
                            Type = "role",
                            UserId = new Guid("4b358d3f-d55e-4771-8e5b-5aeb62cb3e57"),
                            Value = "pro"
                        },
                        new
                        {
                            Id = new Guid("89e3cc7e-59f6-4ba6-9dfc-4020ddb76ebb"),
                            ConcurrencyStamp = "9e46806d-4864-4b71-8369-857f9934a193",
                            Type = "given_name",
                            UserId = new Guid("65ceedf4-43c8-4818-80d8-9ce2bb96c231"),
                            Value = "Arjun"
                        },
                        new
                        {
                            Id = new Guid("9510223d-d440-48c0-b3bf-4925cef028c0"),
                            ConcurrencyStamp = "15cc9230-490e-4286-ba79-a4562769ee02",
                            Type = "family_name",
                            UserId = new Guid("65ceedf4-43c8-4818-80d8-9ce2bb96c231"),
                            Value = "Agarwal"
                        },
                        new
                        {
                            Id = new Guid("d9f335ef-dce4-4d48-a020-f2e9e4b08af7"),
                            ConcurrencyStamp = "dcde57a7-146b-4d85-b151-d94fc1195915",
                            Type = "subscriberSince",
                            UserId = new Guid("65ceedf4-43c8-4818-80d8-9ce2bb96c231"),
                            Value = "\"9999-12-31T23:59:59.9999999\""
                        },
                        new
                        {
                            Id = new Guid("0bda062a-4f41-4148-923d-d5ee352a6e45"),
                            ConcurrencyStamp = "b7efa697-96be-4372-bc85-4ed942e29323",
                            Type = "role",
                            UserId = new Guid("65ceedf4-43c8-4818-80d8-9ce2bb96c231"),
                            Value = "none"
                        });
                });

            modelBuilder.Entity("MakeBitByte.IDP.Entities.UserClaim", b =>
                {
                    b.HasOne("MakeBitByte.IDP.Entities.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MakeBitByte.IDP.Entities.User", b =>
                {
                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
